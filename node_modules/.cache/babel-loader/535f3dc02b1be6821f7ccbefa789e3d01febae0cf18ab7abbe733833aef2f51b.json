{"ast":null,"code":"var _jsxFileName = \"/Users/m.traore/Desktop/DEV/REACT/udemy/use-effect-reducer-and-more/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return {\n        isValid: action.val.includes(\"@\"),\n        value: action.val\n      };\n    case \"USER_BLUR\":\n      return {\n        isValid: state.value.includes(\"@\"),\n        value: state.value\n      };\n    default:\n      return state;\n  }\n};\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return {\n        isValid: action.val.trim().length > 6,\n        value: action.val\n      };\n    case \"USER_BLUR\":\n      return {\n        isValid: state.value.trim().length > 6,\n        value: state.value\n      };\n    default:\n      return state;\n  }\n};\nconst Login = props => {\n  _s();\n  const authCtx = useContext(AuthContext);\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const inputEmailRef = useRef();\n  const inputPasswordRef = useRef();\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"string\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"string\",\n    isValid: null\n  });\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    //setEnteredPassword(event.target.value);\n\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"USER_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"USER_BLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      inputEmailRef.current.focus();\n    } else {\n      inputPasswordRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: inputEmailRef,\n        label: \"E-Mail\",\n        id: \"email\",\n        type: \"email\",\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputPasswordRef,\n        label: \"Password\",\n        id: \"password\",\n        type: \"password\",\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"IpIyhs5Ca2nfAn3LdAglby8tGKM=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","isValid","val","includes","value","passwordReducer","trim","length","Login","props","authCtx","formIsValid","setFormIsValid","inputEmailRef","inputPasswordRef","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"sources":["/Users/m.traore/Desktop/DEV/REACT/udemy/use-effect-reducer-and-more/src/components/Login/Login.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../Input/Input\";\n\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return { isValid: action.val.includes(\"@\"), value: action.val };\n    case \"USER_BLUR\":\n      return { isValid: state.value.includes(\"@\"), value: state.value };\n    default:\n      return state;\n  }\n};\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return {\n        isValid: action.val.trim().length > 6,\n        value: action.val,\n      };\n    case \"USER_BLUR\":\n      return { isValid: state.value.trim().length > 6, value: state.value };\n    default:\n      return state;\n  }\n};\n\nconst Login = (props) => {\n  const authCtx = useContext(AuthContext);\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const inputEmailRef = useRef();\n  const inputPasswordRef = useRef();\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"string\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"string\",\n    isValid: null,\n  });\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n    //setEnteredPassword(event.target.value);\n\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"USER_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"USER_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      inputEmailRef.current.focus();\n    } else {\n      inputPasswordRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          ref={inputEmailRef}\n          label=\"E-Mail\"\n          id=\"email\"\n          type=\"email\"\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={inputPasswordRef}\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}